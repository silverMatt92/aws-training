---
AWSTemplateFormatVersion: 2010-09-09
Description:  This template is intended to be the skeleton template VPC.
Parameters:
  LatestAmiId:
    Description: AMI for Bastion Host (default is latest AmaLinux2)
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2'
  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: "Name of an existing SSH Keypair to access the instance"
Resources:
  Bastion:
    Type: AWS::EC2::Instance
    Properties:
      KeyName: !Ref KeyName
      InstanceType: "t2.micro"
      ImageId: !Ref LatestAmiId
      IamInstanceProfile: !Ref SessionManagerInstanceProfile
      SubnetId: !ImportValue picnic-vpc1-subnet-webb
      SecurityGroupIds: 
        - !Ref InstanceSecurityGroup
      Tags:
        - Key: Name
          Value: picnic-BASTION
      UserData: 
        Fn::Base64: 
          !Sub |
            #!/bin/bash 
            yum install -y awscli
            hostnamectl set-hostname bastion
            aws secretsmanager get-secret-value --secret-id ssh-key-tshoot-exercise --query SecretString --output text --region us-east-1 >> /home/ec2-user/aws-training-picnic.pem
            chmown ec2-user:ec2-user /home/ec2-user/aws-training-picnic.pem 
            chmod 400 /home/ec2-user/aws-training-picnic.pem
  InstanceSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: !ImportValue picnic-vpc1
      GroupDescription: Enable SSH access via port 22 IPv4 & v6
      SecurityGroupIngress:
        - Description: 'Allow SSH IPv4 IN'
          IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: '0.0.0.0/0'
        - Description: 'Allow SSH IPv6 IN'
          IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIpv6: ::/0
  SessionManagerRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
              - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: 
                  - 'ssm:DescribeAssociation'
                  - 'ssm:GetDeployablePatchSnapshotForInstance'
                  - 'ssm:GetDocument'
                  - 'ssm:DescribeDocument'
                  - 'ssm:GetManifest'
                  - 'ssm:GetParameter'
                  - 'ssm:GetParameters'
                  - 'ssm:ListAssociations'
                  - 'ssm:ListInstanceAssociations'
                  - 'ssm:PutInventory'
                  - 'ssm:PutComplianceItems'
                  - 'ssm:PutConfigurePackageResult'
                  - 'ssm:UpdateAssociationStatus'
                  - 'ssm:UpdateInstanceAssociationStatus'
                  - 'ssm:UpdateInstanceInformation'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'ssmmessages:CreateControlChannel'
                  - 'ssmmessages:CreateDataChannel'
                  - 'ssmmessages:OpenControlChannel'
                  - 'ssmmessages:OpenDataChannel' 
                Resource: '*'
              - Effect: Allow
                Action: 
                  - 'ec2messages:AcknowledgeMessage'
                  - 'ec2messages:DeleteMessage'
                  - 'ec2messages:FailMessage'
                  - 'ec2messages:GetEndpoint'
                  - 'ec2messages:GetMessages'
                  - 'ec2messages:SendReply'
                Resource: '*'
              - Effect: Allow
                Action:
                  - "secretsmanager:*"
                  - "cloudformation:CreateChangeSet"
                  - "cloudformation:DescribeChangeSet"
                  - "cloudformation:DescribeStackResource"
                  - "cloudformation:DescribeStacks"
                  - "cloudformation:ExecuteChangeSet"
                  - "ec2:DescribeSecurityGroups"
                  - "ec2:DescribeSubnets"
                  - "ec2:DescribeVpcs"
                  - "kms:DescribeKey"
                  - "kms:ListAliases"
                  - "kms:ListKeys"
                  - "lambda:ListFunctions"
                  - "rds:DescribeDBClusters"
                  - "rds:DescribeDBInstances"
                  - "redshift:DescribeClusters"
                  - "tag:GetResources"
                Resource: '*'
              - Effect: Allow
                Action:
                  - "lambda:AddPermission"
                  - "lambda:CreateFunction"
                  - "lambda:GetFunction"
                  - "lambda:InvokeFunction"
                  - "lambda:UpdateFunctionConfiguration"
                Resource: 'arn:aws:lambda:*:*:function:SecretsManager*'
              - Effect: Allow
                Action: 
                  - "serverlessrepo:CreateCloudFormationChangeSet"
                  - "serverlessrepo:GetApplication"
                Resource: "arn:aws:serverlessrepo:*:*:applications/SecretsManager*"
              - Effect: Allow
                Action: 
                  - "s3:GetObject"
                Resource: "arn:aws:s3:::awsserverlessrepo-changesets*"
              - Effect: Allow
                Action:
                  - "s3:GetObject"
                Resource: "arn:aws:s3:::secrets-manager-rotation-apps-*/*"  
  SessionManagerInstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Path: /
      Roles:
        - !Ref SessionManagerRole
